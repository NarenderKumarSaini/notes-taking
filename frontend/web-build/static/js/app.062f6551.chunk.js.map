{"version":3,"sources":["environment.js","src/api/note.js","src/context/NoteContext.js","src/context/createDataContext.js","src/components/NoteForm.js","src/screens/CreateScreen.js","src/screens/EditScreen.js","src/screens/IndexScreen.js","src/screens/ShowScreen.js","App.js"],"names":["ENV","Platform","OS","apiUrl","env","Constants","manifest","releaseChannel","getEnvVars","instance","axios","create","baseURL","reducer","actions","initialState","Context","React","createContext","Provider","children","useReducer","state","dispatch","boundActions","key","value","createDataContext","action","type","errorMessage","payload","map","note","id","filter","title","content","addNote","callback","noteServer","post","err","response","data","message","deleteNote","delete","editNote","patch","getNotes","get","console","log","clearErrorMessage","NoteForm","onSubmit","initialValues","useState","setTitle","setContent","View","Text","style","styles","label","TextInput","input","onChangeText","text","errorContainer","error","Button","onPress","defaultProps","StyleSheet","fontSize","borderWidth","borderColor","marginBottom","padding","margin","marginLeft","marginVertical","color","marginTop","textAlign","CreateScreen","navigation","useContext","onWillFocus","navigate","EditScreen","getParam","find","pop","IndexScreen","useEffect","listener","addListener","remove","FlatList","keyExtractor","renderItem","item","TouchableOpacity","row","actionIcon","Feather","icon","name","navigationOptions","headerRight","size","flexDirection","justifyContent","paddingVertical","paddingHorizontal","borderTopWidth","marginRight","ShowScreen","container","EvilIcons","navigator","createStackNavigator","Index","Show","Create","Edit","initialRouteName","defaultNavigationOptions","App","createAppContainer"],"mappings":"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","file":"static/js/app.062f6551.chunk.js","sourcesContent":["/*****************************\n * environment.js\n * path: '/environment.js' (root of your project)\n ******************************/\n\nimport Constants from 'expo-constants';\nimport { Platform } from 'react-native';\n\nconst localhost = Platform.OS === 'ios' ? 'localhost:8080' : '10.0.2.2:8080';\n\nconst ENV = {\n  dev: {\n    apiUrl: \"https://note-nestjs.onrender.com\",\n  },\n  staging: {\n    apiUrl: 'https://note-nestjs.onrender.com',\n  },\n  prod: {\n    apiUrl: 'https://note-nestjs.onrender.com',\n  },\n};\n\nconst getEnvVars = (env = Constants.manifest.releaseChannel) => {\n  // What is __DEV__ ?\n  // This variable is set to true when react-native is running in Dev mode.\n  // __DEV__ is true when run locally, but false when published.\n  if (__DEV__) {\n    return ENV.dev;\n  } else if (env === 'staging') {\n    return ENV.staging;\n  } else if (env === 'prod') {\n    return ENV.prod;\n  }\n};\n\nexport default getEnvVars;\n","import axios from 'axios';\n\nimport getEnvVars from '../../environment';\n\nconst { apiUrl } = getEnvVars();\nconst instance = axios.create({\n    baseURL: apiUrl//'http://192.168.1.6:3000'\n});\n\nexport default instance;","import noteServer from '../api/note';\nimport createDataContext from './createDataContext';\n\nconst noteReducer = (state, action) => {\n  switch (action.type) {\n    case 'add_error':\n      return { ...state, errorMessage: action.payload }\n    case 'clear_error_message':\n      return { ...state, errorMessage: '' }\n    case 'get_notes':\n      return action.payload;\n    case 'edit_note':\n      return state.map((note) => {\n        return note.id === action.payload.id ? action.payload : note;\n      });\n    case 'delete_note':\n      return state.filter((note) => note.id !== action.payload);\n    case 'add_note':\n      return [\n        ...state,\n        {\n          title: action.payload.title,\n          content: action.payload.content,\n        },\n      ];\n    default:\n      return state;\n  }\n};\n\nconst getNotes = (dispatch) => {\n  return async () => {\n    try {\n      const response = await noteServer.get('/notes');\n      dispatch({ type: 'get_notes', payload: response.data });\n    } catch (err) {\n      console.log(err)\n    }\n  };\n};\nconst addNote = (dispatch) => {\n  return async (title, content, callback) => {\n    try {\n      await noteServer.post('/notes', { title, content });\n      if (callback) {\n        callback();\n      }\n    } catch (err) {\n      dispatch({ type: 'add_error', payload: err?.response?.data?.message })\n    }\n  };\n};\nconst deleteNote = (dispatch) => {\n  return async (id) => {\n    await noteServer.delete(`/notes/${id}`);\n    dispatch({ type: 'delete_note', payload: id })\n  };\n};\nconst editNote = (dispatch) => {\n  return async (id, title, content, callback) => {\n    await noteServer.patch(`/notes/${id}`, { title, content });\n\n    if (callback) {\n      callback();\n    }\n  };\n};\n\nconst clearErrorMessage = (dispatch) => () => {\n  dispatch({ type: \"clear_error_message\" });\n};\n\nexport const { Context, Provider } = createDataContext(\n  noteReducer,\n  { addNote, deleteNote, editNote, getNotes, clearErrorMessage },\n  { errorMessage: '' }\n);\n","import React, { useReducer } from 'react';\n\nexport default (reducer, actions, initialState) => {\n  const Context = React.createContext();\n\n  const Provider = ({ children }) => {\n    const [state, dispatch] = useReducer(reducer, initialState);\n\n\n    const boundActions = {};\n    for (let key in actions) {\n      boundActions[key] = actions[key](dispatch);\n    }\n\n    return (\n      <Context.Provider value={{ state, ...boundActions }}>\n        {children}\n      </Context.Provider>\n    );\n  };\n\n  return { Context, Provider };\n};\n","import React, { useState } from 'react';\n\nimport {\n  Button,\n  StyleSheet,\n  Text,\n  TextInput,\n  View,\n} from 'react-native';\n\nconst NoteForm = ({ errorMessage, onSubmit, initialValues }) => {\n  const [title, setTitle] = useState(initialValues.title);\n  const [content, setContent] = useState(initialValues.content);\n\n\n  return (\n    <View>\n      <Text style={styles.label}>Enter Title:</Text>\n      <TextInput\n        style={styles.input}\n        value={title}\n        onChangeText={(text) => setTitle(text)}\n      />\n      <Text style={styles.label}>Enter Content:</Text>\n      <TextInput\n        style={styles.input}\n        value={content}\n        onChangeText={(text) => setContent(text)}\n      />\n      {errorMessage && (\n        <View style={styles.errorContainer}>\n          {errorMessage.map(error => {\n            return <Text style={styles.errorMessage}>{error}</Text>;\n          })}\n        </View>\n      )}\n      <Button title='Save Note' onPress={() => onSubmit(title, content)} />\n    </View>\n  );\n};\n\nNoteForm.defaultProps = {\n  initialValues: {\n    title: '',\n    content: '',\n  },\n};\n\nconst styles = StyleSheet.create({\n  input: {\n    fontSize: 18,\n    borderWidth: 1,\n    borderColor: 'black',\n    marginBottom: 15,\n    padding: 5,\n    margin: 5,\n  },\n  label: {\n    fontSize: 20,\n    marginBottom: 5,\n    marginLeft: 5,\n  },\n  errorContainer: {\n    marginVertical: 10\n  },\n  errorMessage: {\n    fontSize: 16,\n    color: 'red',\n    marginLeft: 15,\n    marginTop: 15,\n    textAlign: 'center'\n  }\n});\n\nexport default NoteForm;\n","import React, { useContext } from 'react';\n\nimport { StyleSheet } from 'react-native';\nimport { View } from 'react-native-web';\nimport { NavigationEvents } from 'react-navigation';\n\nimport NoteForm from '../components/NoteForm';\nimport { Context } from '../context/NoteContext';\n\nconst CreateScreen = ({ navigation }) => {\n  const { state, addNote, clearErrorMessage } = useContext(Context);\n\n  return (\n    <View>\n      <NavigationEvents onWillFocus={clearErrorMessage} />\n      <NoteForm\n        errorMessage={state.errorMessage}\n        onSubmit={(title, content) => {\n          addNote(title, content, () => navigation.navigate('Index'));\n        }}\n        initialValues={{ title: '', content: '' }}\n      />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({});\n\nexport default CreateScreen;\n","import React, { useContext } from 'react';\n\nimport { StyleSheet } from 'react-native';\n\nimport NoteForm from '../components/NoteForm';\nimport { Context } from '../context/NoteContext';\n\nconst EditScreen = ({ navigation }) => {\n  const id = navigation.getParam('id');\n  const { state, editNote } = useContext(Context);\n\n  const note = state.find((note) => note.id === id);\n\n  return (\n    <NoteForm\n      initialValues={{ title: note.title, content: note.content }}\n      onSubmit={(title, content) => {\n        editNote(id, title, content, () => navigation.pop());\n      }}\n    />\n  );\n};\n\nconst styles = StyleSheet.create({});\n\nexport default EditScreen;\n","import React, {\n  useContext,\n  useEffect,\n} from 'react';\n\nimport {\n  FlatList,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  View,\n} from 'react-native';\n\nimport { Feather } from '@expo/vector-icons';\n\nimport { Context } from '../context/NoteContext';\n\nconst IndexScreen = ({ navigation }) => {\n  const { state, deleteNote, getNotes } = useContext(Context);\n\n  useEffect(() => {\n    getNotes();\n\n    const listener = navigation.addListener('didFocus', () => {\n      getNotes();\n    });\n\n    return () => {\n      listener.remove();\n    };\n  }, []);\n\n  return (\n    <View>\n      <FlatList\n        data={state}\n        keyExtractor={(note) => note.title}\n        renderItem={({ item }) => {\n          return (\n            <TouchableOpacity\n              onPress={() => navigation.navigate('Show', { id: item.id })}\n            >\n              <View style={styles.row}>\n                <Text style={styles.title}>\n                  {item.title} - {item.content}\n                </Text>\n                <TouchableOpacity style={styles.actionIcon} onPress={() => deleteNote(item.id)}>\n                  <Feather style={styles.icon} name='trash' />\n                </TouchableOpacity>\n              </View>\n            </TouchableOpacity>\n          );\n        }}\n      />\n    </View>\n  );\n};\n\nIndexScreen.navigationOptions = ({ navigation }) => {\n  return {\n    headerRight: () => (\n      <TouchableOpacity style={styles.actionIcon} onPress={() => navigation.navigate('Create')}>\n        <Feather name='plus' size={30} />\n      </TouchableOpacity>\n    ),\n  };\n};\n\nconst styles = StyleSheet.create({\n  row: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    paddingVertical: 20,\n    paddingHorizontal: 10,\n    borderTopWidth: 1,\n    borderColor: 'gray',\n  },\n  title: {\n    fontSize: 18,\n  },\n  icon: {\n    fontSize: 24,\n  },\n  actionIcon: {\n    marginRight: 30\n  }\n});\n\nexport default IndexScreen;\n","import React, { useContext } from 'react';\n\nimport {\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  View,\n} from 'react-native';\n\nimport { EvilIcons } from '@expo/vector-icons';\n\nimport { Context } from '../context/NoteContext';\n\nconst ShowScreen = ({ navigation }) => {\n  const { state } = useContext(Context);\n\n  const note = state.find(\n    (note) => note.id === navigation.getParam('id')\n  );\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>{note.title}</Text>\n      <Text style={styles.content}>{note.content}</Text>\n    </View>\n  );\n};\n\nShowScreen.navigationOptions = ({ navigation }) => {\n  return {\n    headerRight: () => (\n      <TouchableOpacity\n        onPress={() =>\n          navigation.navigate('Edit', { id: navigation.getParam('id') })\n        }\n        style={styles.actionIcon}\n      >\n        <EvilIcons name='pencil' size={35} />\n      </TouchableOpacity>\n    ),\n  };\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    textAlign: 'center'\n  },\n  title: {\n    fontSize: 30\n  },\n  content: {\n    marginTop: 20,\n    fontSize: 20\n  },\n  actionIcon: {\n    marginRight: 30\n  }\n});\n\nexport default ShowScreen;\n","import React from 'react';\n\nimport { createAppContainer } from 'react-navigation';\nimport { createStackNavigator } from 'react-navigation-stack';\n\nimport { Provider } from './src/context/NoteContext';\nimport CreateScreen from './src/screens/CreateScreen';\nimport EditScreen from './src/screens/EditScreen';\nimport IndexScreen from './src/screens/IndexScreen';\nimport ShowScreen from './src/screens/ShowScreen';\n\nconst navigator = createStackNavigator(\n  {\n    Index: IndexScreen,\n    Show: ShowScreen,\n    Create: CreateScreen,\n    Edit: EditScreen,\n  },\n  {\n    initialRouteName: 'Index',\n    defaultNavigationOptions: {\n      title: 'Notes Management',\n    },\n  }\n);\n\nconst App = createAppContainer(navigator);\n\nexport default () => {\n  return (\n    <Provider>\n      <App />\n    </Provider>\n  );\n};\n"],"sourceRoot":""}